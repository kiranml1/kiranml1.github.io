<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Algorithms | Kiran's Blog]]></title>
  <link href="http://akirank.com/blog/categories/algorithms/atom.xml" rel="self"/>
  <link href="http://akirank.com/"/>
  <updated>2019-05-11T13:32:17+05:30</updated>
  <id>http://akirank.com/</id>
  <author>
    <name><![CDATA[Kiran Kumar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Codes - Circular Array Rotation]]></title>
    <link href="http://akirank.com/blog/2017/01/22/hackerrank-circular-array-rotation/"/>
    <updated>2017-01-22T17:26:49+05:30</updated>
    <id>http://akirank.com/blog/2017/01/22/hackerrank-circular-array-rotation</id>
    <content type="html"><![CDATA[<p>Hackerrank codes - Circular array rotation (Implementation in JS)
``` javascript max-draw.js <a href="https://gist.github.com/kiranml1/2c805c44a4b722e40186013470d5ad64">https://gist.github.com/kiranml1/2c805c44a4b722e40186013470d5ad64</a>
    function rotate() {
      var n_temp = readLine().split(&lsquo; &rsquo;);
      var n = parseInt(n_temp[0]);
      var k = parseInt(n_temp[1]);
      var q = parseInt(n_temp[2]);
      a = readLine().split(&lsquo; &rsquo;);
      a = a.map(Number);</p>

<pre><code>  var rot = k%n;
  for(var a0 = 0; a0 &lt; q; a0++) {
    var m = parseInt(readLine());
    if (m - rot &gt;= 0) {
      console.log(a[m -  rot]);
    } else {
      console.log(a[m - rot + a.length]);
    }
  }
}
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Codes - Hand Shake]]></title>
    <link href="http://akirank.com/blog/2017/01/22/hackerrank-hand-shake/"/>
    <updated>2017-01-22T17:25:38+05:30</updated>
    <id>http://akirank.com/blog/2017/01/22/hackerrank-hand-shake</id>
    <content type="html"><![CDATA[<p>Hackerrank codes - Hand shake (Implementation in JS)
<code>javascript max-draw.js https://gist.github.com/kiranml1/2c805c44a4b722e40186013470d5ad64
    function handshake() {
      var T = parseInt(readLine());
      for(var a0 = 0; a0 &lt; T; a0++){
        var N = parseInt(readLine());
        console.log(Math.floor(N * (N - 1)/2));
      }
    }
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Codes - Max Draws]]></title>
    <link href="http://akirank.com/blog/2017/01/22/hackerrank-max-draws/"/>
    <updated>2017-01-22T17:21:44+05:30</updated>
    <id>http://akirank.com/blog/2017/01/22/hackerrank-max-draws</id>
    <content type="html"><![CDATA[<p>Hackerrank codes - Max draws (Implementation in JS)
<code>javascript max-draw.js https://gist.github.com/kiranml1/6d32a8dc396ea6a0896bb3ec05d49913
    function maxDraws(input) {
      var data = input.split("\n")
      var t = data[0];
      for (var i = 1 ; i &lt;= t; i += 1) {
        var n = data[i].match(/\d+/g);
        console.log(parseInt(n) + 1);
      }
    }
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Codes - Find the Point]]></title>
    <link href="http://akirank.com/blog/2017/01/22/hackerrank-find-a-point/"/>
    <updated>2017-01-22T16:40:26+05:30</updated>
    <id>http://akirank.com/blog/2017/01/22/hackerrank-find-a-point</id>
    <content type="html"><![CDATA[<p>Hackerrank codes - Find the Point (Implementation in JS)
<code>javascript find-a-point.js https://gist.github.com/kiranml1/627b82e703966c54095f6baa45296396
    function findPoint(input) {
      var data = input.split("\n")
      var n = data[0];
      for (var i = 1 ; i &lt;= n; i += 1) {
        var pq = data[i].match(/\d+/g).map(Number);
        console.log((pq[2] + (pq[2] - pq[0])) + " " + (pq[3] + (pq[3] - pq[1])));
      }
    }
</code></p>
]]></content>
  </entry>
  
</feed>
